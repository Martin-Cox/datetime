{"version":3,"sources":["../src/datetime.js"],"names":[],"mappings":"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","file":"datetime.stg.js","sourcesContent":["/**\r\n * Created by Serge Balykov (ua9msn@mail.ru) on 2/1/17.\r\n */\r\n\r\n(function($, window, document, undefined){\r\n\r\n    /* eslint-disable no-unused-vars */\r\n    const KEY_TAB       = 9,\r\n          KEY_ENTER     = 13,\r\n          KEY_BACKSPACE = 8,\r\n          KEY_DELETE    = 46,\r\n          KEY_ESCAPE    = 27,\r\n          KEY_SPACE     = 32,\r\n          KEY_DOWN      = 40,\r\n          KEY_UP        = 38,\r\n          KEY_LEFT      = 37,\r\n          KEY_RIGHT     = 39,\r\n          KEY_A         = 65,\r\n          KEY_C         = 67,\r\n          KEY_V         = 86,\r\n          KEY_D         = 68,\r\n          KEY_F2        = 113,\r\n          KEY_INSERT    = 45;\r\n    /* eslint-enable no-unused-vars */\r\n\r\n    const DAYLEN = 86400000;\r\n\r\n    const pluginName = 'datetime',\r\n          defaults   = {\r\n              datetime: NaN,\r\n              locale:   navigator.language,\r\n              format:   'dd.MM.yyyy HH:mm:ss',\r\n              minDate:  NaN,\r\n              maxDate:  NaN,\r\n              minTime:  NaN,\r\n              maxTime:  NaN,\r\n              tabControls: false\r\n          };\r\n\r\n    function Plugin(element, options){\r\n        this.$element          = element;\r\n        this.element           = element[0];\r\n        this.currentSpareIndex = 0;\r\n        this.spares            = [];\r\n\r\n        this._handleMouseDown  = this._handleMouseDown.bind(this);\r\n        this._handleKeydown    = this._handleKeydown.bind(this);\r\n        this._handleMousewheel = this._handleMousewheel.bind(this);\r\n\r\n        this._init();\r\n        //clone value\r\n\r\n        this.setOptions(Object.assign({}, defaults, options));\r\n    }\r\n\r\n    Plugin.prototype = {\r\n\r\n        _init: function(){\r\n\r\n            this.element.setSelectionRange(0, 0);\r\n\r\n            // this.element.addEventListener('select', this.handleSelection.bind(this));\r\n            this.element.addEventListener('mouseup', this._handleMouseDown);\r\n            this.element.addEventListener('keydown', this._handleKeydown);\r\n            this.element.addEventListener('mousewheel', this._handleMousewheel);\r\n\r\n        },\r\n\r\n        _refresh: function(){\r\n            this.spares        = this._disassembleTimestamp(this.datetime, this.options.locale, this.options.format);\r\n            this.element.value = this.spares.map(s => s.strval).join('');\r\n\r\n            const spare = this.spares[this.currentSpareIndex];\r\n            if(spare) {\r\n                this.element.setSelectionRange(spare.offset, spare.offset + spare.length);\r\n            }\r\n        },\r\n\r\n        _handleMouseDown: function(e){\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            this._ensureValueExist();\r\n\r\n            this.currentSpareIndex = this._calculateSpareIndexAtCaretPosition(e.target.selectionStart, this.spares);\r\n            const spare            = this.spares[this.currentSpareIndex];\r\n\r\n            e.target.focus();\r\n\r\n            if(!spare) return;\r\n\r\n            e.target.setSelectionRange(spare.offset, spare.offset + spare.length);\r\n        },\r\n\r\n        _ensureValueExist: function(){\r\n            if(!this.spares.length) {\r\n                this.datetime = new Date();\r\n                this._refresh();\r\n            }\r\n\r\n        },\r\n\r\n        _handleKeydown: function(e){\r\n\r\n            this._ensureValueExist();\r\n\r\n            const spare = this.spares[this.currentSpareIndex];\r\n            const left  = -1;\r\n            const right = 1;\r\n\r\n            const move = (direction) => {\r\n                this.currentSpareIndex = this._calculateNextSpareIndex(this.spares, this.currentSpareIndex, direction, function(x){\r\n                    return x.field !== 'Delimiter';\r\n                });\r\n                this._refresh();\r\n            };\r\n\r\n            switch(e.which) {\r\n\r\n                case KEY_LEFT:\r\n                    e.preventDefault();\r\n                    move(left);\r\n                    break;\r\n\r\n                case KEY_RIGHT:\r\n                    e.preventDefault();\r\n                    move(right);\r\n                    break;\r\n\r\n                case KEY_UP:\r\n                    e.preventDefault();\r\n                    this._crement(1, spare);\r\n                    break;\r\n\r\n                case KEY_DOWN:\r\n                    e.preventDefault();\r\n                    this._crement(-1, spare);\r\n                    break;\r\n\r\n                case KEY_DELETE:\r\n                    e.preventDefault();\r\n                    this.datetime = new Date(NaN);\r\n                    this._refresh();\r\n                    break;\r\n\r\n                case KEY_TAB:\r\n                    if (this.options.tabControls) {\r\n                        const previousSpareIndex = this.currentSpareIndex; \r\n\r\n                        if (e.shiftKey)\r\n                        {\r\n                            move(left);\r\n                        }\r\n                        else\r\n                        {\r\n                            move(right);\r\n                        }\r\n\r\n                        // Prevent default tab behaviour if there was still room to move inside the control\r\n                        if (previousSpareIndex !== this.currentSpareIndex)\r\n                        {\r\n                             e.preventDefault();\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case KEY_A:\r\n                case KEY_C:\r\n                    if(!e.ctrlKey) {\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    // ignore non-numbers\r\n                    if(!isFinite(e.key)) return;\r\n                    // ignore ampm\r\n                    if(spare.field === 'AMPM') return;\r\n                    // ignore Weekday\r\n                    if(spare.field === 'Weekday') return;\r\n\r\n                    this._modify(+e.key, spare);\r\n                    break;\r\n\r\n            }\r\n\r\n        },\r\n\r\n        _handleMousewheel: function(e){\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            this._ensureValueExist();\r\n\r\n            const spare = this.spares[this.currentSpareIndex];\r\n            const direction = Math.sign(e.wheelDelta);\r\n\r\n            this._crement(direction, spare);\r\n            this._refresh();\r\n\r\n        },\r\n\r\n        _calculateSpareIndexAtCaretPosition: function(caretPosition, spares){\r\n\r\n            let index = 0,\r\n                s = spares.findIndex( spare => spare.field !== 'Delimiter' );\r\n\r\n            for(s; s < spares.length ; s++) {\r\n\r\n                if(spares[s].field !== 'Delimiter') {\r\n                    index = s;\r\n                }\r\n\r\n                if(spares[s].offset >= caretPosition){\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            return index;\r\n        },\r\n\r\n        _calculateNextSpareIndex: function(spares, currentIndex, direction, testFn){\r\n\r\n            direction = Math.sign(direction); //make sure the direction is +1 or -1\r\n            let newIndex = currentIndex ;\r\n            newIndex = newIndex / 1;\r\n\r\n            for(let y = currentIndex + direction ; y >= 0 && y < spares.length ; y += direction ){\r\n                if( testFn(spares[y]) ) {\r\n                    newIndex = y;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return newIndex;\r\n\r\n        },\r\n\r\n        _getMaxFieldValueAtDate: function(date, fieldName){\r\n\r\n            const fy = date.getFullYear();\r\n            const m  = date.getMonth();\r\n\r\n            switch(fieldName) {\r\n                case 'FullYear':\r\n                    return 9999;\r\n                case 'Month':\r\n                    return 12;\r\n                case 'Date':\r\n                    return (new Date(fy, m + 1, 0)).getDate(); // get number of days in the month\r\n                case 'Hours':\r\n                    return 23;\r\n                case 'Minutes':\r\n                    return 59;\r\n                case 'Seconds':\r\n                    return 59;\r\n                default:\r\n                    break;\r\n\r\n            }\r\n\r\n\r\n        },\r\n\r\n        _calculateNextValue: function(input, spare, max){\r\n\r\n            let prev = spare.buffer || spare.value;\r\n\r\n            // in spare month has value as for Date (Jan = 0)\r\n            // but user input supposed to be 1 for Jan\r\n            if(spare.field === 'Month') {\r\n                prev = prev + 1;\r\n            }\r\n\r\n            //append number to the end\r\n            const x = prev * 10 + input;\r\n\r\n            // split to summ of digits\r\n            const arr = [x % 10000, x % 1000, x % 100, x % 10];\r\n\r\n            // calculate closest less value\r\n            let mm = arr.reduce(function(p, c){\r\n                return c <= max ? Math.max(p, c) : p;\r\n            }, 0);\r\n\r\n            // rollback month value\r\n            // but prevent pass 0\r\n            if(spare.field === 'Month') {\r\n                mm = mm ? mm - 1 : prev - 1;\r\n            }\r\n\r\n            // Date can not be null.\r\n            // We allow to enter 0 if it makes valid date (10, 20, 30)\r\n            if(spare.field === 'Date' && mm === 0) {\r\n                mm = prev;\r\n            }\r\n\r\n            const fnName = 'setUTC' + spare.field;\r\n\r\n            let proxyTime = new Date(this.datetime);\r\n\r\n            proxyTime[fnName](mm);\r\n\r\n            const isValid = this._validate(proxyTime);\r\n\r\n            if(isValid) {\r\n                return proxyTime;\r\n            } else {\r\n\r\n                let isFieldValid        = true;\r\n                const maxDateFieldValue = ( new Date(this.options.maxDate) )['getUTC' + spare.field]();\r\n                const minDateFieldValue = ( new Date(this.options.minDate) )['getUTC' + spare.field]();\r\n                const minTimeFieldValue = ( new Date(this.options.minTime) )['getUTC' + spare.field]();  //NaN, number\r\n                const maxTimeFieldValue = ( new Date(this.options.maxTime) )['getUTC' + spare.field]();\r\n                const thisValue         = proxyTime['getUTC' + spare.field]();\r\n\r\n                if(spare.field === 'FullYear' || spare.field === 'Month' || spare.field === 'Date') {\r\n                    isFieldValid = !(maxDateFieldValue < thisValue) && !(thisValue < minDateFieldValue);\r\n                }\r\n\r\n                if(spare.field === 'Hours' || spare.field === 'Minutes' || spare.field === 'Seconds') {\r\n\r\n                    if(maxTimeFieldValue > minTimeFieldValue) {\r\n                        isFieldValid = !( (maxDateFieldValue || maxTimeFieldValue) < thisValue) && !(thisValue < ( minTimeFieldValue || minDateFieldValue) );\r\n                    } else {\r\n                        isFieldValid = !( (maxDateFieldValue || maxTimeFieldValue) > thisValue) && !(thisValue > ( minTimeFieldValue || minDateFieldValue) );\r\n                    }\r\n                }\r\n\r\n                if(isFieldValid) {\r\n                    proxyTime = this._fitToLmits(proxyTime);\r\n                    return proxyTime;\r\n                }\r\n\r\n                spare.buffer = (spare.buffer || 0) * 10 + input;\r\n\r\n                return this.datetime;\r\n\r\n            }\r\n\r\n        },\r\n\r\n        _crement: function(operator, spare){\r\n\r\n            if(spare.field === 'Delimiter') return;\r\n\r\n            let fnName,\r\n                newValue = spare.value;\r\n\r\n            if(spare.field === 'AMPM') {\r\n                fnName = 'setUTCHours';\r\n                newValue += operator * 12;\r\n            } else if(spare.field === 'Weekday') {\r\n                fnName = 'setUTCDate';\r\n                newValue += operator;\r\n            } else {\r\n                fnName = 'setUTC' + spare.field;\r\n                newValue += operator;\r\n            }\r\n\r\n            const proxyTime = new Date(this.datetime);\r\n\r\n            proxyTime[fnName](newValue);\r\n\r\n            const result = this._fitToLmits(proxyTime);\r\n\r\n            if(result.getTime() !== this.datetime.getTime()) {\r\n\r\n                this.datetime = result;\r\n\r\n                this._refresh();\r\n\r\n                this.$element.trigger('change', this.datetime);\r\n            }\r\n\r\n        },\r\n\r\n        _modify: function(input, spare){\r\n\r\n            const maxValue = this._getMaxFieldValueAtDate(this.datetime, spare.field);\r\n\r\n            const result = this._calculateNextValue(input, spare, maxValue);\r\n\r\n            if(result !== this.datetime) {\r\n                this.datetime = result;\r\n\r\n                this._refresh();\r\n\r\n                this.$element.trigger('change', this.datetime);\r\n\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @param timestamp {int}\r\n         * @return {string}\r\n         * */\r\n        _disassembleTimestamp: function(datetime, locale, format){\r\n\r\n            let result = [],\r\n                offset = 0;\r\n\r\n            //NaN check\r\n            if(datetime == 'Invalid Date') return result;\r\n\r\n            // undefined and null check\r\n            if(datetime == undefined) return result;\r\n\r\n            const pattern = format.trim().match(/\\w+|\\S|\\s/g);\r\n\r\n            const\r\n                Date      = datetime.getUTCDate(),\r\n                // Day          = datetime.getUTCDay(),\r\n                FullYear  = datetime.getUTCFullYear(),\r\n                Hours     = datetime.getUTCHours(),\r\n                // Milliseconds = datetime.getUTCMilliseconds(),\r\n                Minutes   = datetime.getUTCMinutes(),\r\n                Month     = datetime.getUTCMonth(),\r\n                Seconds   = datetime.getUTCSeconds(),\r\n                timestamp = datetime.getTime();\r\n\r\n\r\n            for(let i = 0; i < pattern.length; i++) {\r\n\r\n                let intlOption = {timeZone: 'UTC'},\r\n                    _spare     = {},\r\n                    _l         = locale + '-u-nu-latn',\r\n                    _p;\r\n\r\n                switch(pattern[i]) {\r\n\r\n                    /*\r\n                     //era is not supported yet\r\n                     case 'G':\r\n                     intlOption  = {era: 'short', year: 'numeric', timeZone: 'UTC'};\r\n                     _spare.strval = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                     _spare.value     = FullYear;\r\n                     _spare.field = 'FullYear';\r\n\r\n                     break;\r\n                     */\r\n\r\n                    case 'yy' :\r\n                        intlOption.year = '2-digit';\r\n                        _spare.strval   = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value    = FullYear;\r\n                        _spare.field    = 'FullYear';\r\n                        break;\r\n\r\n                    case 'yyyy' :\r\n                        intlOption    = {year: 'numeric', timeZone: 'UTC'};\r\n                        _spare.strval = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value  = FullYear;\r\n                        _spare.field  = 'FullYear';\r\n                        break;\r\n\r\n                    case 'M' :\r\n                        intlOption.month = '2-digit';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'MM' :\r\n                        intlOption.month = 'short';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'MMM' :\r\n                        intlOption.month = 'narrow';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'MMMM' :\r\n                        intlOption.month = 'long';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'L' :\r\n                        intlOption.month = 'long';\r\n                        intlOption.day   = '2-digit';\r\n                        // here we need the correct form of the month name\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, {\r\n                            day:   '2-digit',\r\n                            month: 'long'\r\n                        }).format(timestamp).substr(3);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'd' :\r\n                        intlOption.day = 'numeric';\r\n                        _spare.strval  = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value   = Date;\r\n                        _spare.field   = 'Date';\r\n                        break;\r\n\r\n                    case 'dd' :\r\n                        intlOption.day = '2-digit';\r\n                        _spare.strval  = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value   = Date;\r\n                        _spare.field   = 'Date';\r\n                        break;\r\n\r\n                    case 'EE' :\r\n                        intlOption.weekday = 'short';\r\n                        _spare.strval      = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value       = Date;\r\n                        _spare.field       = 'Weekday';\r\n                        break;\r\n\r\n                    case 'EEE' :\r\n                        intlOption.weekday = 'narrow';\r\n                        _spare.strval      = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value       = Date;\r\n                        _spare.field       = 'Weekday';\r\n                        break;\r\n\r\n                    case 'EEEE' :\r\n                        intlOption.weekday = 'long';\r\n                        _spare.strval      = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value       = Date;\r\n                        _spare.field       = 'Weekday';\r\n                        break;\r\n\r\n\r\n                    case 'h':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Hours % 12);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'hh':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Hours % 12);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'H':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Hours);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'HH':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Hours);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'm' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Minutes);\r\n                        _spare.value  = Minutes;\r\n                        _spare.field  = 'Minutes';\r\n                        break;\r\n\r\n                    case 'mm' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Minutes);\r\n                        _spare.value  = Minutes;\r\n                        _spare.field  = 'Minutes';\r\n                        break;\r\n\r\n                    case 's' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Seconds);\r\n                        _spare.value  = Seconds;\r\n                        _spare.field  = 'Seconds';\r\n                        break;\r\n\r\n                    case 'ss' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Seconds);\r\n                        _spare.value  = Seconds;\r\n                        _spare.field  = 'Seconds';\r\n                        break;\r\n\r\n                    case 'a':\r\n\r\n                        // very special case\r\n                        // We do not know AMPM translation for unknown language.\r\n                        // To detect we ask Intl to translate\r\n                        // but Intl won't translate it without hours\r\n                        // Due to non-latin numbers are treated by regexp as letters\r\n                        // we force locale to use latin numbers and trim them out\r\n                        // Wzhuh!\r\n\r\n\r\n                        intlOption.hour   = 'numeric';\r\n                        intlOption.hour12 = true;\r\n                        _p                = Intl.DateTimeFormat(_l, intlOption).format(timestamp);\r\n\r\n                        _spare.strval = _p.match(/[^\\d\\s]+/g)[0];\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'AMPM';\r\n\r\n                        break;\r\n\r\n                    // delimeter\r\n                    default:\r\n                        _spare.strval = pattern[i];\r\n                        _spare.field  = 'Delimiter';\r\n                        break;\r\n                }\r\n\r\n                _spare.length = _spare.strval.length;\r\n                _spare.offset = offset;\r\n                offset += _spare.length;\r\n                result.push(_spare);\r\n\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _validate: function(datetime){\r\n\r\n            const timestamp = datetime.getTime();\r\n            const timePart  = (timestamp % DAYLEN + DAYLEN) % DAYLEN;\r\n            const datePart  = timestamp - timePart;\r\n\r\n            let validTime = true,\r\n                validDate = true;\r\n\r\n            const isMaxDate    = isFinite(this.options.maxDate);\r\n            const isMaxTime    = isFinite(this.options.maxTime);\r\n            const isMinDate    = isFinite(this.options.minDate);\r\n            const isMinTime    = isFinite(this.options.minTime);\r\n            const isNightRange = this.options.minTime > this.options.maxTime;\r\n\r\n            if(isMinTime && isMaxTime) {\r\n                validTime = isNightRange\r\n                    ? this.options.maxTime >= timePart || timePart >= this.options.minTime\r\n                    : this.options.maxTime >= timePart && timePart >= this.options.minTime;\r\n            }\r\n\r\n            if(isMinDate && !isMinTime) {\r\n                validDate = validDate && (timestamp >= this.options.minDate);\r\n            }\r\n\r\n            if(isMaxDate && !isMaxTime) {\r\n                validDate = validDate && (timestamp <= this.options.maxDate);\r\n            }\r\n\r\n            if(isMinDate && isMinTime) {\r\n                validDate = validDate && (datePart >= this.options.minDate);\r\n            }\r\n\r\n            if(isMaxDate && isMaxTime) {\r\n                validDate = validDate && (datePart <= this.options.maxDate);\r\n            }\r\n\r\n            return validDate && validTime;\r\n\r\n        },\r\n\r\n        _fitToLmits: function(datetime){\r\n\r\n            if(isNaN(datetime)) return datetime;\r\n\r\n            const timestamp = datetime.getTime();\r\n\r\n            let timePart = (timestamp % DAYLEN + DAYLEN) % DAYLEN, //this is trick for negative timestamps\r\n                datePart = timestamp - timePart;\r\n\r\n\r\n            if(!isNaN(this.options.minTime) && !isNaN(this.options.maxTime)) {\r\n\r\n                if(this.options.maxTime > this.options.minTime) {\r\n                    timePart = Math.max(this.options.minTime, Math.min(this.options.maxTime, timePart));\r\n                } else {\r\n                    let nearestLimit = Math.abs(timePart - this.options.maxTime) < Math.abs(timePart - this.options.minTime)\r\n                        ? this.options.maxTime\r\n                        : this.options.minTime;\r\n                    timePart         = timePart > this.options.minTime || timePart < this.options.maxTime ? timePart : nearestLimit;\r\n                }\r\n\r\n                if(!isNaN(this.options.minDate)) {\r\n                    datePart = Math.max(datePart, this.options.minDate);\r\n                }\r\n\r\n                if(!isNaN(this.options.maxDate)) {\r\n                    datePart = Math.min(datePart, this.options.maxDate);\r\n                }\r\n\r\n\r\n            } else {\r\n\r\n                timePart = 0;\r\n\r\n                let mD = isNaN(this.options.minDate) ? -Infinity : this.options.minDate;\r\n                let MD = isNaN(this.options.maxDate) ? Infinity : this.options.maxDate;\r\n\r\n                datePart = Math.max(mD, Math.min(MD, timestamp));\r\n\r\n                if(isNaN(datePart)) {\r\n                    datePart = timestamp;\r\n                }\r\n            }\r\n\r\n            return new Date(datePart + timePart);\r\n\r\n        },\r\n\r\n        getTime: function(){\r\n            return this.datetime;\r\n        },\r\n\r\n        setTime: function(date){\r\n\r\n            this.datetime = new Date(date);\r\n            this._refresh();\r\n        },\r\n\r\n        setOptions: function(options){\r\n\r\n            this.options = Object.assign({}, this.options, options);\r\n\r\n            this.datetime = options.hasOwnProperty('datetime') ? new Date(options.datetime) : this.datetime;\r\n\r\n            let mD = new Date(this.options.minDate).getTime();\r\n            let MD = new Date(this.options.maxDate).getTime();\r\n            let mT = new Date(this.options.minTime).getTime();\r\n            let MT = new Date(this.options.maxTime).getTime();\r\n\r\n\r\n            this.options.minTime = ( mT % DAYLEN + DAYLEN ) % DAYLEN; // NaN, number [0...86400000 - 1]\r\n            this.options.maxTime = ( MT % DAYLEN + DAYLEN ) % DAYLEN;\r\n            this.options.minDate = isNaN(mT) ? mD : mD - mD % DAYLEN;  // NaN, number\r\n            this.options.maxDate = isNaN(MT) ? MD : MD - MD % DAYLEN;\r\n\r\n            if(!isNaN(this.options.minTime)) {\r\n                this.options.maxTime = isNaN(this.options.maxTime) ? DAYLEN : this.options.maxTime;\r\n            }\r\n\r\n            if(!isNaN(this.options.maxTime)) {\r\n                this.options.minTime = isNaN(this.options.minTime) ? 0 : this.options.minTime;\r\n            }\r\n\r\n\r\n            this._refresh();\r\n\r\n        },\r\n\r\n        destroy: function(){\r\n            this.element.removeEventListener('mouseup', this._handleMouseDown);\r\n            this.element.removeEventListener('keydown', this._handleKeydown);\r\n            this.element.removeEventListener('mousewheel', this._handleMousewheel);\r\n\r\n            $(this.element).removeData(pluginName);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    // A really lightweight plugin wrapper around the constructor,\r\n    // preventing against multiple instantiations\r\n    $.fn[pluginName] = function(method, options){\r\n\r\n        /* eslint-disable no-console */\r\n        if(!this.data(pluginName)) {\r\n\r\n            if(typeof method === 'string') {\r\n                console.warn('datetime plugin expect options object as first argument');\r\n                return;\r\n            }\r\n\r\n            this.data(pluginName, new Plugin(this, method));\r\n\r\n            return this;\r\n\r\n        } else {\r\n            //calling method\r\n            let instance = this.data(pluginName);\r\n\r\n            if(typeof instance[method] !== 'function') {\r\n                console.warn('method ', method, ' not exist');\r\n                return;\r\n            }\r\n\r\n            return instance[method](options);\r\n\r\n        }\r\n        /* eslint-enable no-console */\r\n\r\n    };\r\n\r\n})(jQuery, window, document);"]}