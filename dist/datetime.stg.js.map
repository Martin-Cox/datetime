{"version":3,"sources":["../src/datetime.js"],"names":[],"mappings":"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","file":"datetime.stg.js","sourcesContent":["/**\r\n * Created by Serge Balykov (ua9msn@mail.ru) on 2/1/17.\r\n */\r\n\r\n(function($, window, document, undefined){\r\n\r\n    /* eslint-disable no-unused-vars */\r\n    const KEY_TAB       = 9,\r\n          KEY_ENTER     = 13,\r\n          KEY_BACKSPACE = 8,\r\n          KEY_DELETE    = 46,\r\n          KEY_ESCAPE    = 27,\r\n          KEY_SPACE     = 32,\r\n          KEY_DOWN      = 40,\r\n          KEY_UP        = 38,\r\n          KEY_LEFT      = 37,\r\n          KEY_RIGHT     = 39,\r\n          KEY_A         = 65,\r\n          KEY_C         = 67,\r\n          KEY_V         = 86,\r\n          KEY_D         = 68,\r\n          KEY_F2        = 113,\r\n          KEY_INSERT    = 45,\r\n          KEY_ADD       = 107,\r\n          KEY_MINUS     = 109;\r\n    /* eslint-enable no-unused-vars */\r\n\r\n    const DAYLEN = 86400000;\r\n\r\n    const pluginName = 'datetime',\r\n          defaults   = {\r\n              datetime: NaN,\r\n              locale:   navigator.language,\r\n              format:   'dd.MM.yyyy HH:mm:ss',\r\n              minDate:  NaN,\r\n              maxDate:  NaN,\r\n              minTime:  NaN,\r\n              maxTime:  NaN,\r\n              tabControls: false\r\n          };\r\n\r\n    function Plugin(element, options){\r\n        this.$element          = element;\r\n        this.element           = element[0];\r\n        this.currentSpareIndex = 0;\r\n        this.spares            = [];\r\n\r\n        this._handleMouseDown  = this._handleMouseDown.bind(this);\r\n        this._handleKeydown    = this._handleKeydown.bind(this);\r\n        this._handleMousewheel = this._handleMousewheel.bind(this);\r\n\r\n        this._init();\r\n        //clone value\r\n\r\n        this.setOptions(Object.assign({}, defaults, options));\r\n    }\r\n\r\n    Plugin.prototype = {\r\n\r\n        _init: function(){\r\n            this.element.setSelectionRange(0, 0);\r\n\r\n            this.element.addEventListener('mouseup', this._handleMouseDown);\r\n            this.element.addEventListener('keydown', this._handleKeydown);\r\n            this.element.addEventListener('mousewheel', this._handleMousewheel);\r\n        },\r\n\r\n        _refresh: function(){\r\n            this.spares        = this._disassembleTimestamp(this.datetime, this.options.locale, this.options.format);\r\n            this.element.value = this.spares.map(s => s.strval).join('');\r\n\r\n            const spare = this.spares[this.currentSpareIndex];\r\n            if(spare) {\r\n                this.element.setSelectionRange(spare.offset, spare.offset + spare.length);\r\n            }\r\n        },\r\n\r\n        _handleMouseDown: function(e){\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            this._ensureValueExist();\r\n\r\n            this.currentSpareIndex = this._calculateSpareIndexAtCaretPosition(e.target.selectionStart, this.spares);\r\n            const spare            = this.spares[this.currentSpareIndex];\r\n\r\n            e.target.focus();\r\n\r\n            if(!spare) return;\r\n\r\n            e.target.setSelectionRange(spare.offset, spare.offset + spare.length);\r\n        },\r\n\r\n        _ensureValueExist: function(){\r\n            if(!this.spares.length) {\r\n                this.datetime = new Date();\r\n                this._refresh();\r\n            }\r\n\r\n        },\r\n\r\n        _handleKeydown: function(e){\r\n\r\n            this._ensureValueExist();\r\n\r\n            const spare = this.spares[this.currentSpareIndex];\r\n            const left  = -1;\r\n            const right = 1;\r\n\r\n            const move = (direction) => {\r\n                this.currentSpareIndex = this._calculateNextSpareIndex(this.spares, this.currentSpareIndex, direction, function(x){\r\n                    return x.field !== 'Delimiter';\r\n                });\r\n                this._refresh();\r\n            };\r\n\r\n            switch(e.which) {\r\n\r\n                case KEY_LEFT:\r\n                    e.preventDefault();\r\n                    move(left);\r\n                    break;\r\n\r\n                case KEY_RIGHT:\r\n                    e.preventDefault();\r\n                    move(right);\r\n                    break;\r\n\r\n                case KEY_UP:\r\n                case KEY_ADD:\r\n                    e.preventDefault();\r\n                    this._crement(1, spare);\r\n                    break;\r\n\r\n                case KEY_DOWN:\r\n                case KEY_MINUS:\r\n                    e.preventDefault();\r\n                    this._crement(-1, spare);\r\n                    break;\r\n\r\n                case KEY_DELETE:\r\n                    e.preventDefault();\r\n                    this.datetime = new Date(NaN);\r\n                    this._refresh();\r\n                    break;\r\n\r\n                case KEY_TAB:\r\n                    if (this.options.tabControls) {\r\n                        const previousSpareIndex = this.currentSpareIndex; \r\n\r\n                        if (e.shiftKey)\r\n                        {\r\n                            move(left);\r\n                        }\r\n                        else\r\n                        {\r\n                            move(right);\r\n                        }\r\n\r\n                        // Prevent default tab behaviour if there was still room to move inside the control\r\n                        if (previousSpareIndex !== this.currentSpareIndex)\r\n                        {\r\n                             e.preventDefault();\r\n                             e.stopImmediatePropagation();\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case KEY_A:\r\n                case KEY_C:\r\n                    if(!e.ctrlKey) {\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    // https://github.com/ua9msn/datetime/issues/2\r\n                    e.preventDefault();\r\n                    // ignore non-numbers\r\n                    if(!isFinite(e.key)) return;\r\n                    // ignore ampm\r\n                    if(spare.field === 'AMPM') return;\r\n                    // ignore Weekday\r\n                    if(spare.field === 'Weekday') return;\r\n\r\n                    this._modify(+e.key, spare);\r\n\r\n                    break;\r\n\r\n            }\r\n\r\n        },\r\n\r\n        _handleMousewheel: function(e){\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            this._ensureValueExist();\r\n\r\n            const spare = this.spares[this.currentSpareIndex];\r\n            const direction = Math.sign(e.wheelDelta);\r\n\r\n            this._crement(direction, spare);\r\n            this._refresh();\r\n\r\n        },\r\n\r\n        _calculateSpareIndexAtCaretPosition: function(caretPosition, spares){\r\n\r\n            let index = 0,\r\n                s = spares.findIndex( spare => spare.field !== 'Delimiter' );\r\n\r\n            for(s; s < spares.length ; s++) {\r\n\r\n                if(spares[s].field !== 'Delimiter') {\r\n                    index = s;\r\n                }\r\n\r\n                if(spares[s].offset >= caretPosition){\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            return index;\r\n        },\r\n\r\n        _calculateNextSpareIndex: function(spares, currentIndex, direction, testFn){\r\n\r\n            direction = Math.sign(direction); //make sure the direction is +1 or -1\r\n            let newIndex = currentIndex ;\r\n            newIndex = newIndex / 1;\r\n\r\n            for(let y = currentIndex + direction ; y >= 0 && y < spares.length ; y += direction ){\r\n                if( testFn(spares[y]) ) {\r\n                    newIndex = y;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return newIndex;\r\n\r\n        },\r\n\r\n        _getMaxFieldValueAtDate: function(date, fieldName){\r\n\r\n            const fy = date.getFullYear();\r\n            const m  = date.getMonth();\r\n\r\n            switch(fieldName) {\r\n                case 'FullYear':\r\n                    return 9999;\r\n                case 'Month':\r\n                    return 12;\r\n                case 'Date':\r\n                    return (new Date(fy, m + 1, 0)).getDate(); // get number of days in the month\r\n                case 'Hours':\r\n                    return 23;\r\n                case 'Minutes':\r\n                    return 59;\r\n                case 'Seconds':\r\n                    return 59;\r\n                default:\r\n                    break;\r\n\r\n            }\r\n\r\n\r\n        },\r\n\r\n        _calculateNextValue: function(input, spare, max){\r\n\r\n            let prev = spare.buffer || spare.value;\r\n\r\n            // in spare month has value as for Date (Jan = 0)\r\n            // but user input supposed to be 1 for Jan\r\n            if(spare.field === 'Month') {\r\n                prev = prev + 1;\r\n            }\r\n\r\n            //append number to the end\r\n            const x = prev * 10 + input;\r\n\r\n            // split to summ of digits\r\n            const arr = [x % 10000, x % 1000, x % 100, x % 10];\r\n\r\n            // calculate closest less value\r\n            let mm = arr.reduce(function(p, c){\r\n                return c <= max ? Math.max(p, c) : p;\r\n            }, 0);\r\n\r\n            // rollback month value\r\n            // but prevent pass 0\r\n            if(spare.field === 'Month') {\r\n                mm = mm ? mm - 1 : prev - 1;\r\n            }\r\n\r\n            // Date can not be null.\r\n            // We allow to enter 0 if it makes valid date (10, 20, 30)\r\n            if(spare.field === 'Date' && mm === 0) {\r\n                mm = prev;\r\n            }\r\n\r\n            const fnName = 'setUTC' + spare.field;\r\n\r\n            let proxyTime = new Date(this.datetime);\r\n\r\n            proxyTime[fnName](mm);\r\n\r\n            const isValid = this._validate(proxyTime);\r\n\r\n            if(isValid) {\r\n                return proxyTime;\r\n            } else {\r\n\r\n                let isFieldValid        = true;\r\n                const maxDateFieldValue = ( new Date(this.options.maxDate) )['getUTC' + spare.field]();\r\n                const minDateFieldValue = ( new Date(this.options.minDate) )['getUTC' + spare.field]();\r\n                const minTimeFieldValue = ( new Date(this.options.minTime) )['getUTC' + spare.field]();  //NaN, number\r\n                const maxTimeFieldValue = ( new Date(this.options.maxTime) )['getUTC' + spare.field]();\r\n                const thisValue         = proxyTime['getUTC' + spare.field]();\r\n\r\n                if(spare.field === 'FullYear' || spare.field === 'Month' || spare.field === 'Date') {\r\n                    isFieldValid = !(maxDateFieldValue < thisValue) && !(thisValue < minDateFieldValue);\r\n                }\r\n\r\n                if(spare.field === 'Hours' || spare.field === 'Minutes' || spare.field === 'Seconds') {\r\n\r\n                    if(maxTimeFieldValue > minTimeFieldValue) {\r\n                        isFieldValid = !( (maxDateFieldValue || maxTimeFieldValue) < thisValue) && !(thisValue < ( minTimeFieldValue || minDateFieldValue) );\r\n                    } else {\r\n                        isFieldValid = !( (maxDateFieldValue || maxTimeFieldValue) > thisValue) && !(thisValue > ( minTimeFieldValue || minDateFieldValue) );\r\n                    }\r\n                }\r\n\r\n                if(isFieldValid) {\r\n                    proxyTime = this._fitToLmits(proxyTime);\r\n                    return proxyTime;\r\n                }\r\n\r\n                spare.buffer = (spare.buffer || 0) * 10 + input;\r\n\r\n                return this.datetime;\r\n\r\n            }\r\n\r\n        },\r\n\r\n        _crement: function(operator, spare){\r\n\r\n            if(spare.field === 'Delimiter') return;\r\n\r\n            let fnName,\r\n                newValue = spare.value;\r\n\r\n            if(spare.field === 'AMPM') {\r\n                fnName = 'setUTCHours';\r\n                newValue += operator * 12;\r\n            } else if(spare.field === 'Weekday') {\r\n                fnName = 'setUTCDate';\r\n                newValue += operator;\r\n            } else {\r\n                fnName = 'setUTC' + spare.field;\r\n                newValue += operator;\r\n            }\r\n\r\n            const proxyTime = new Date(this.datetime);\r\n\r\n            proxyTime[fnName](newValue);\r\n\r\n            const result = this._fitToLmits(proxyTime);\r\n\r\n            if(result.getTime() !== this.datetime.getTime()) {\r\n\r\n                this.datetime = result;\r\n\r\n                this._refresh();\r\n\r\n                this.$element.trigger('change', this.datetime);\r\n            }\r\n\r\n        },\r\n\r\n        _modify: function(input, spare){\r\n\r\n            const maxValue = this._getMaxFieldValueAtDate(this.datetime, spare.field);\r\n\r\n            const result = this._calculateNextValue(input, spare, maxValue);\r\n\r\n            if(result !== this.datetime) {\r\n                this.datetime = result;\r\n\r\n                this._refresh();\r\n\r\n                this.$element.trigger('change', this.datetime);\r\n\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @param timestamp {int}\r\n         * @return {string}\r\n         * */\r\n        _disassembleTimestamp: function(datetime, locale, format){\r\n\r\n            let result = [],\r\n                offset = 0;\r\n\r\n            //NaN check\r\n            if(datetime == 'Invalid Date') return result;\r\n\r\n            // undefined and null check\r\n            if(datetime == undefined) return result;\r\n\r\n            const pattern = format.trim().match(/\\w+|\\S|\\s/g);\r\n\r\n            const\r\n                Date      = datetime.getUTCDate(),\r\n                // Day          = datetime.getUTCDay(),\r\n                FullYear  = datetime.getUTCFullYear(),\r\n                Hours     = datetime.getUTCHours(),\r\n                // Milliseconds = datetime.getUTCMilliseconds(),\r\n                Minutes   = datetime.getUTCMinutes(),\r\n                Month     = datetime.getUTCMonth(),\r\n                Seconds   = datetime.getUTCSeconds(),\r\n                timestamp = datetime.getTime();\r\n\r\n\r\n            for(let i = 0; i < pattern.length; i++) {\r\n\r\n                let intlOption = {timeZone: 'UTC'},\r\n                    _spare     = {},\r\n                    _l         = locale + '-u-nu-latn',\r\n                    _p;\r\n\r\n                switch(pattern[i]) {\r\n\r\n                    /*\r\n                     //era is not supported yet\r\n                     case 'G':\r\n                     intlOption  = {era: 'short', year: 'numeric', timeZone: 'UTC'};\r\n                     _spare.strval = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                     _spare.value     = FullYear;\r\n                     _spare.field = 'FullYear';\r\n\r\n                     break;\r\n                     */\r\n\r\n                    case 'yy' :\r\n                        intlOption.year = '2-digit';\r\n                        _spare.strval   = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value    = FullYear;\r\n                        _spare.field    = 'FullYear';\r\n                        break;\r\n\r\n                    case 'yyyy' :\r\n                        intlOption    = {year: 'numeric', timeZone: 'UTC'};\r\n                        _spare.strval = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value  = FullYear;\r\n                        _spare.field  = 'FullYear';\r\n                        break;\r\n\r\n                    case 'M' :\r\n                        intlOption.month = '2-digit';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'MM' :\r\n                        intlOption.month = 'short';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'MMM' :\r\n                        intlOption.month = 'narrow';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'MMMM' :\r\n                        intlOption.month = 'long';\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'L' :\r\n                        intlOption.month = 'long';\r\n                        intlOption.day   = '2-digit';\r\n                        // here we need the correct form of the month name\r\n                        _spare.strval    = Intl.DateTimeFormat(locale, {\r\n                            day:   '2-digit',\r\n                            month: 'long'\r\n                        }).format(timestamp).substr(3);\r\n                        _spare.value     = Month;\r\n                        _spare.field     = 'Month';\r\n                        break;\r\n\r\n                    case 'd' :\r\n                        intlOption.day = 'numeric';\r\n                        _spare.strval  = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value   = Date;\r\n                        _spare.field   = 'Date';\r\n                        break;\r\n\r\n                    case 'dd' :\r\n                        intlOption.day = '2-digit';\r\n                        _spare.strval  = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value   = Date;\r\n                        _spare.field   = 'Date';\r\n                        break;\r\n\r\n                    case 'EE' :\r\n                        intlOption.weekday = 'short';\r\n                        _spare.strval      = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value       = Date;\r\n                        _spare.field       = 'Weekday';\r\n                        break;\r\n\r\n                    case 'EEE' :\r\n                        intlOption.weekday = 'narrow';\r\n                        _spare.strval      = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value       = Date;\r\n                        _spare.field       = 'Weekday';\r\n                        break;\r\n\r\n                    case 'EEEE' :\r\n                        intlOption.weekday = 'long';\r\n                        _spare.strval      = Intl.DateTimeFormat(locale, intlOption).format(timestamp);\r\n                        _spare.value       = Date;\r\n                        _spare.field       = 'Weekday';\r\n                        break;\r\n\r\n\r\n                    case 'h':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Hours % 12);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'hh':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Hours % 12);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'H':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Hours);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'HH':\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Hours);\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'Hours';\r\n                        break;\r\n\r\n                    case 'm' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Minutes);\r\n                        _spare.value  = Minutes;\r\n                        _spare.field  = 'Minutes';\r\n                        break;\r\n\r\n                    case 'mm' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Minutes);\r\n                        _spare.value  = Minutes;\r\n                        _spare.field  = 'Minutes';\r\n                        break;\r\n\r\n                    case 's' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 1}).format(Seconds);\r\n                        _spare.value  = Seconds;\r\n                        _spare.field  = 'Seconds';\r\n                        break;\r\n\r\n                    case 'ss' :\r\n                        _spare.strval = Intl.NumberFormat(locale, {minimumIntegerDigits: 2}).format(Seconds);\r\n                        _spare.value  = Seconds;\r\n                        _spare.field  = 'Seconds';\r\n                        break;\r\n\r\n                    case 'a':\r\n\r\n                        // very special case\r\n                        // We do not know AMPM translation for unknown language.\r\n                        // To detect we ask Intl to translate\r\n                        // but Intl won't translate it without hours\r\n                        // Due to non-latin numbers are treated by regexp as letters\r\n                        // we force locale to use latin numbers and trim them out\r\n                        // Wzhuh!\r\n\r\n\r\n                        intlOption.hour   = 'numeric';\r\n                        intlOption.hour12 = true;\r\n                        _p                = Intl.DateTimeFormat(_l, intlOption).format(timestamp);\r\n\r\n                        _spare.strval = _p.match(/[^\\d\\s]+/g)[0];\r\n                        _spare.value  = Hours;\r\n                        _spare.field  = 'AMPM';\r\n\r\n                        break;\r\n\r\n                    // delimeter\r\n                    default:\r\n                        _spare.strval = pattern[i];\r\n                        _spare.field  = 'Delimiter';\r\n                        break;\r\n                }\r\n\r\n                _spare.length = _spare.strval.length;\r\n                _spare.offset = offset;\r\n                offset += _spare.length;\r\n                result.push(_spare);\r\n\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _validate: function(datetime){\r\n\r\n            const timestamp = datetime.getTime();\r\n            const timePart  = (timestamp % DAYLEN + DAYLEN) % DAYLEN;\r\n            const datePart  = timestamp - timePart;\r\n\r\n            let validTime = true,\r\n                validDate = true;\r\n\r\n            const isMaxDate    = isFinite(this.options.maxDate);\r\n            const isMaxTime    = isFinite(this.options.maxTime);\r\n            const isMinDate    = isFinite(this.options.minDate);\r\n            const isMinTime    = isFinite(this.options.minTime);\r\n            const isNightRange = this.options.minTime > this.options.maxTime;\r\n\r\n            if(isMinTime && isMaxTime) {\r\n                validTime = isNightRange\r\n                    ? this.options.maxTime >= timePart || timePart >= this.options.minTime\r\n                    : this.options.maxTime >= timePart && timePart >= this.options.minTime;\r\n            }\r\n\r\n            if(isMinDate && !isMinTime) {\r\n                validDate = validDate && (timestamp >= this.options.minDate);\r\n            }\r\n\r\n            if(isMaxDate && !isMaxTime) {\r\n                validDate = validDate && (timestamp <= this.options.maxDate);\r\n            }\r\n\r\n            if(isMinDate && isMinTime) {\r\n                validDate = validDate && (datePart >= this.options.minDate);\r\n            }\r\n\r\n            if(isMaxDate && isMaxTime) {\r\n                validDate = validDate && (datePart <= this.options.maxDate);\r\n            }\r\n\r\n            return validDate && validTime;\r\n\r\n        },\r\n\r\n        _fitToLmits: function(datetime){\r\n\r\n            if(isNaN(datetime)) return datetime;\r\n\r\n            const timestamp = datetime.getTime();\r\n\r\n            let timePart = (timestamp % DAYLEN + DAYLEN) % DAYLEN, //this is trick for negative timestamps\r\n                datePart = timestamp - timePart;\r\n\r\n\r\n            if(!isNaN(this.options.minTime) && !isNaN(this.options.maxTime)) {\r\n\r\n                if(this.options.maxTime > this.options.minTime) {\r\n                    timePart = Math.max(this.options.minTime, Math.min(this.options.maxTime, timePart));\r\n                } else {\r\n                    let nearestLimit = Math.abs(timePart - this.options.maxTime) < Math.abs(timePart - this.options.minTime)\r\n                        ? this.options.maxTime\r\n                        : this.options.minTime;\r\n                    timePart         = timePart > this.options.minTime || timePart < this.options.maxTime ? timePart : nearestLimit;\r\n                }\r\n\r\n                if(!isNaN(this.options.minDate)) {\r\n                    datePart = Math.max(datePart, this.options.minDate);\r\n                }\r\n\r\n                if(!isNaN(this.options.maxDate)) {\r\n                    datePart = Math.min(datePart, this.options.maxDate);\r\n                }\r\n\r\n\r\n            } else {\r\n\r\n                timePart = 0;\r\n\r\n                let mD = isNaN(this.options.minDate) ? -Infinity : this.options.minDate;\r\n                let MD = isNaN(this.options.maxDate) ? Infinity : this.options.maxDate;\r\n\r\n                datePart = Math.max(mD, Math.min(MD, timestamp));\r\n\r\n                if(isNaN(datePart)) {\r\n                    datePart = timestamp;\r\n                }\r\n            }\r\n\r\n            return new Date(datePart + timePart);\r\n\r\n        },\r\n\r\n        getTime: function(){\r\n            return this.datetime;\r\n        },\r\n\r\n        setTime: function(date){\r\n\r\n            this.datetime = new Date(date);\r\n            this._refresh();\r\n        },\r\n\r\n        setOptions: function(options){\r\n\r\n            this.options = Object.assign({}, this.options, options);\r\n\r\n            this.datetime = options.hasOwnProperty('datetime') ? new Date(options.datetime) : this.datetime;\r\n\r\n            let mD = new Date(this.options.minDate).getTime();\r\n            let MD = new Date(this.options.maxDate).getTime();\r\n            let mT = new Date(this.options.minTime).getTime();\r\n            let MT = new Date(this.options.maxTime).getTime();\r\n\r\n\r\n            this.options.minTime = ( mT % DAYLEN + DAYLEN ) % DAYLEN; // NaN, number [0...86400000 - 1]\r\n            this.options.maxTime = ( MT % DAYLEN + DAYLEN ) % DAYLEN;\r\n            this.options.minDate = isNaN(mT) ? mD : mD - mD % DAYLEN;  // NaN, number\r\n            this.options.maxDate = isNaN(MT) ? MD : MD - MD % DAYLEN;\r\n\r\n            if(!isNaN(this.options.minTime)) {\r\n                this.options.maxTime = isNaN(this.options.maxTime) ? DAYLEN : this.options.maxTime;\r\n            }\r\n\r\n            if(!isNaN(this.options.maxTime)) {\r\n                this.options.minTime = isNaN(this.options.minTime) ? 0 : this.options.minTime;\r\n            }\r\n\r\n\r\n            this._refresh();\r\n\r\n        },\r\n\r\n        destroy: function(){\r\n            this.element.removeEventListener('mouseup', this._handleMouseDown);\r\n            this.element.removeEventListener('keydown', this._handleKeydown);\r\n            this.element.removeEventListener('mousewheel', this._handleMousewheel);\r\n\r\n            $(this.element).removeData(pluginName);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    // A really lightweight plugin wrapper around the constructor,\r\n    // preventing against multiple instantiations\r\n    $.fn[pluginName] = function(method, options){\r\n\r\n        /* eslint-disable no-console */\r\n        if(!this.data(pluginName)) {\r\n\r\n            if(typeof method === 'string') {\r\n                console.warn('datetime plugin expect options object as first argument');\r\n                return;\r\n            }\r\n\r\n            this.data(pluginName, new Plugin(this, method));\r\n\r\n            return this;\r\n\r\n        } else {\r\n            //calling method\r\n            let instance = this.data(pluginName);\r\n\r\n            if(typeof instance[method] !== 'function') {\r\n                console.warn('method ', method, ' not exist');\r\n                return;\r\n            }\r\n\r\n            return instance[method](options);\r\n\r\n        }\r\n        /* eslint-enable no-console */\r\n\r\n    };\r\n\r\n})(jQuery, window, document);"]}